{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.userName = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  onLogin() {\n    this.authService.login(this.userName, this.password).subscribe({\n      next: response => {\n        // Save token\n        localStorage.setItem('token', response.token);\n        // Simple role check (just based on username)\n        if (this.userName === 'admin') {\n          this.router.navigate(['/admin']);\n        } else {\n          this.router.navigate(['/user']);\n        }\n      },\n      error: err => {\n        console.error(err);\n        this.errorMessage = 'Login failed. Check console.';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 15,\n      vars: 3,\n      consts: [[2, \"max-width\", \"300px\", \"margin\", \"50px auto\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [2, \"color\", \"red\", \"margin-top\", \"10px\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n          i0.ɵɵtext(5, \"Username:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.userName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n          i0.ɵɵtext(9, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n            return ctx.onLogin();\n          });\n          i0.ɵɵtext(12, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 4);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.userName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.errorMessage, \" \");\n        }\n      },\n      dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","userName","password","errorMessage","onLogin","login","subscribe","next","response","localStorage","setItem","token","navigate","error","err","console","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","LoginComponent_Template_button_click_11_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["C:\\Users\\HP\\Desktop\\Project\\Movie App\\movie-app\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\HP\\Desktop\\Project\\Movie App\\movie-app\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["// src/app/auth/login/login.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  userName = '';\r\n  password = '';\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  onLogin() {\r\n    this.authService.login(this.userName, this.password).subscribe({\r\n      next: (response) => {\r\n        // Save token\r\n        localStorage.setItem('token', response.token);\r\n\r\n        // Simple role check (just based on username)\r\n        if (this.userName === 'admin') {\r\n          this.router.navigate(['/admin']);\r\n        } else {\r\n          this.router.navigate(['/user']);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error(err);\r\n        this.errorMessage = 'Login failed. Check console.';\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- src/app/auth/login/login.component.html -->\r\n<div style=\"max-width: 300px; margin: 50px auto;\">\r\n  <h2>Login</h2>\r\n  <div>\r\n    <label>Username:</label>\r\n    <input type=\"text\" [(ngModel)]=\"userName\" />\r\n  </div>\r\n  <div>\r\n    <label>Password:</label>\r\n    <input type=\"password\" [(ngModel)]=\"password\" />\r\n  </div>\r\n  <button (click)=\"onLogin()\">Login</button>\r\n  <div style=\"color: red; margin-top: 10px;\">\r\n    {{ errorMessage }}\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}