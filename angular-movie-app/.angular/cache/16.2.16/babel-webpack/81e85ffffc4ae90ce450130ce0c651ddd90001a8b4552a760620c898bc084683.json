{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = 'http://localhost:8080/api/admin';\n  }\n  searchMovies(query) {\n    return this.http.get(`${this.BASE_URL}/search?query=${query}`);\n  }\n  addMovie(movie) {\n    return this.http.post(`${this.BASE_URL}/add`, movie);\n  }\n  deleteMovie(id) {\n    return this.http.delete(`${this.BASE_URL}/delete/${id}`, {\n      responseType: 'text'\n    });\n  }\n  listAllMovies() {\n    return this.http.get(`${this.BASE_URL}/list`);\n  }\n  static {\n    this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AdminService","constructor","http","BASE_URL","searchMovies","query","get","addMovie","movie","post","deleteMovie","id","delete","responseType","listAllMovies","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\Project\\Movie App\\movie-app\\src\\app\\admin\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface MovieDTO {\r\n  Title: string;\r\n  Year: string;\r\n  imdbID: string;\r\n  Poster?: string;\r\n}\r\n\r\nexport interface MovieEntity {\r\n  id: number;\r\n  title: string;\r\n  year: string;\r\n  imdbID: string;\r\n  posterUrl?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AdminService {\r\n  private BASE_URL = 'http://localhost:8080/api/admin';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  searchMovies(query: string): Observable<MovieDTO[]> {\r\n    return this.http.get<MovieDTO[]>(`${this.BASE_URL}/search?query=${query}`);\r\n  }\r\n\r\n  addMovie(movie: MovieDTO): Observable<MovieEntity> {\r\n    return this.http.post<MovieEntity>(`${this.BASE_URL}/add`, movie);\r\n  }\r\n\r\n  deleteMovie(id: number): Observable<any> {\r\n    return this.http.delete(`${this.BASE_URL}/delete/${id}`, { responseType: 'text' });\r\n  }\r\n\r\n  listAllMovies(): Observable<MovieEntity[]> {\r\n    return this.http.get<MovieEntity[]>(`${this.BASE_URL}/list`);\r\n  }\r\n}\r\n"],"mappings":";;AAuBA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,iCAAiC;EAEb;EAEvCC,YAAYA,CAACC,KAAa;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,QAAQ,iBAAiBE,KAAK,EAAE,CAAC;EAC5E;EAEAE,QAAQA,CAACC,KAAe;IACtB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAc,GAAG,IAAI,CAACN,QAAQ,MAAM,EAAEK,KAAK,CAAC;EACnE;EAEAE,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAC,GAAG,IAAI,CAACT,QAAQ,WAAWQ,EAAE,EAAE,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACpF;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAgB,GAAG,IAAI,CAACH,QAAQ,OAAO,CAAC;EAC9D;;;uBAnBWH,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZlB,YAAY;MAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;MAAAC,UAAA,EAHX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}