{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TokenInterceptor {\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const cloned = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(req);\n  }\n  static {\n    this.ɵfac = function TokenInterceptor_Factory(t) {\n      return new (t || TokenInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenInterceptor,\n      factory: TokenInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["TokenInterceptor","intercept","req","next","token","localStorage","getItem","cloned","clone","setHeaders","Authorization","handle","factory","ɵfac"],"sources":["C:\\Users\\HP\\Desktop\\Project\\Movie App\\movie-app\\src\\app\\interceptors\\token.interceptor.ts"],"sourcesContent":["// src/app/interceptors/token.interceptor.ts\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const cloned = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      return next.handle(cloned);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n"],"mappings":";AAWA,OAAM,MAAOA,gBAAgB;EAC3BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,MAAM,GAAGL,GAAG,CAACM,KAAK,CAAC;QACvBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUN,KAAK;;OAEjC,CAAC;MACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC;;IAE5B,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;EACzB;;;uBAZWF,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAY,OAAA,EAAhBZ,gBAAgB,CAAAa;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}